pipeline{
     agent none
     environment{ 
    dockerImage = ''
    registry = 'sumithpe/poc6auth'
    PATH = "$PATH:/root/.dotnet/tools"
    DOCKERHUB_CREDENTIALS= credentials('dockerhub_id')
    GITHUB_CREDENTIALS= credentials('github_id')
    REVISION = 19
    HARBOR_CREDENTIALS = credentials('harbor_id') 
} 
     stages{
         stage('Checkout') {
         agent{
     label 'poc6-auth'
     }
          steps{ 
          git branch: 'main', url: 'https://github.com/sumit871996/poc6auth.git'
               }
          }
      
          stage('Docker build'){
          agent{
     label 'poc6-auth'
     }
          steps{
             
               sh "sudo docker image build -t sumithpe/poc6auth ./JWTAuth_Validation/"
               }  
          }
          
          
          stage('Docker push'){
          agent{
     label 'poc6-auth'
     }
          steps{
               sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                        sh "sudo docker image push sumithpe/poc6auth:latest"
               
          }
          }  
          stage('docker stop container') {
        agent {
     label 'poc6-auth'
     }
         steps {
        
            sh "docker ps -f name=poc6authcon  -q | xargs --no-run-if-empty docker container stop"
            sh "docker container ls -a -fname=poc6authcon -q | xargs -r docker container rm"
            
         }
       }
          stage('Docker Run') {
       agent {
     label 'poc6-auth'
     }
        steps {
          
                sh "sudo docker container run -d -p 49356:80 --rm --name poc6authcon sumithpe/poc6auth"
                
            }
        }

          stage('Push to harbor'){
          agent{
        label 'harbor_node'
    }
            steps{
            sh "docker image prune -af"
                sh "docker image pull sumithpe/imagebackidentification:$REVISION"
                  sh "docker image tag sumithpe/imagebackidentification:$REVISION 20.21.104.152/imageidentification/imagebackidentification:$REVISION"
                sh 'echo $HARBOR_CREDENTIALS_PSW | docker login 20.21.104.152 -u $HARBOR_CREDENTIALS_USR --password-stdin'  
                sh "docker image push 20.21.104.152/imageidentification/imagebackidentification:$REVISION"
            }
        }
          
          
     }
}
